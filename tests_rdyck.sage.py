

# This file was *autogenerated* from the file tests_rdyck.sage
from sage.all_cmdline import *   # import sage library

_sage_const_7 = Integer(7); _sage_const_5 = Integer(5); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_4 = Integer(4); _sage_const_10 = Integer(10); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3)
sage.repl.load.load(sage.repl.load.base64.b64decode("cmR5Y2suc2FnZQ=="),globals(),False)

# Tests RDYCK
print ("Tests RDYCK")

a1 = _sage_const_7 
b1 = _sage_const_5 
p1 = [_sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_0 ]
p2 = [_sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 ]
p3 = [_sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_0 ]
R1 = RDYCK (a1, b1, p1)
R2 = RDYCK (a1, b1, p2)
R3 = RDYCK (a1, b1, p3)
print (R1.is_rdyck ())
print (R2.is_rdyck ())
print (R3.is_rdyck ())
print ()

R1.pretty_print ()
print ()

print (R1.rdyck_coord ())
print ()

a = _sage_const_5 
b = _sage_const_4 
g = generate_rdyck (a, b)
k = _sage_const_0 
for e in g :
    print (e.p)
    k = k + _sage_const_1 
print (k)
print ((_sage_const_1  / (a + b)) * binomial (a + b, a))
print ()

print (R1.rdyck_to_list ())
print ()

print (parcours (R1))
print ()

print (vallees (R1))
print ()

a4 = _sage_const_10 
b4 = _sage_const_7 
p4 = [_sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_0 , _sage_const_1 , _sage_const_0 ]
pt = (_sage_const_2 , _sage_const_3 )
R4 = RDYCK (a4, b4, p4)
print (laser (R4, pt))
print (lasers (R4))
print ()

print (hauteurs (R4))
print ()

print (P (R4))
print (Q (R4))
print ()

R5 = transpose (R4)
R4.pretty_print ()
R5.pretty_print ()
print (R5.is_rdyck ())
print ()



p6 = [_sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_0 , _sage_const_1 , _sage_const_0 ]
R6 = RDYCK (a4, b4, p6)
print (R6.is_rdyck ())
R7 = rotr (R6)
R7.pretty_print ()
print (R7.is_rdyck ())
print ()

R8 = rotr (R4)
R8.pretty_print ()
print (R8.is_rdyck ())
print ()

p9 = [_sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_1 , _sage_const_1 , _sage_const_0 , _sage_const_0 ]
R9 = RDYCK (a4, b4, p9)
print (R9.is_rdyck ())
R10 = rotr (R9)
R10.pretty_print ()
print (R10.is_rdyck ())

p11 = [_sage_const_1 ] * _sage_const_10  + [_sage_const_0 ] * _sage_const_7 
R11 = RDYCK (a4, b4, p11)
print (R11.is_rdyck ())
R12 = rotr (R11)
R11.pretty_print ()
print (R11.is_rdyck ())

