

# This file was *autogenerated* from the file tests_fp.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_5 = Integer(5); _sage_const_6 = Integer(6); _sage_const_3 = Integer(3); _sage_const_4 = Integer(4); _sage_const_0 = Integer(0)
sage.repl.load.load(sage.repl.load.base64.b64decode("ZnAuc2FnZQ=="),globals(),False)

# TESTS FP
print ("Tests FP")

L1 = [_sage_const_1 , _sage_const_2 , _sage_const_5 , _sage_const_6 , _sage_const_3 , _sage_const_3 ]
L2 = [_sage_const_3 , _sage_const_4 , _sage_const_1 , _sage_const_3 ]
L3 = [_sage_const_1 , _sage_const_2 , _sage_const_3 , _sage_const_3 , _sage_const_5 , _sage_const_6 ]
L4 = [_sage_const_1 , _sage_const_3 , _sage_const_3 , _sage_const_4 , _sage_const_4 ]
print (is_fp (L1))
print (is_fp (L2))
print (is_primitive (L1))
print (is_primitive (L3))
print (is_primitive (L4))
print ("")

n = _sage_const_4 
g = generate_fp (n)
k = _sage_const_0 
while True :
    try :
        print (g.send (None))
        k = k + _sage_const_1 
    except :
        break
print (k)
print ((n + _sage_const_1 )**(n - _sage_const_1 ))
print ("")

g = generate_fpp (n)
k = _sage_const_0 
while True :
    try :
        print (g.send (None))
        k = k + _sage_const_1 
    except :
        break
print (k)
print (catalan_number (n))

