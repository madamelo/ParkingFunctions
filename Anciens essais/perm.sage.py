

# This file was *autogenerated* from the file perm.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_0 = Integer(0)
def is_perm (L) :
    n = len (L)
    L2 = [i for i in (ellipsis_iter(_sage_const_1 ,Ellipsis,n))]
    return (L2 == sorted (L))

def inv_perm (L) :
    if not is_perm (L) :
        return []
    n = len (L)
    L2 = [_sage_const_0 ] * n
    for i, a in enumerate (L) :
        L2 [a - _sage_const_1 ] = i + _sage_const_1 
    return L2

def comp_perm (L1, L2) :
    L = []
    n = len (L1)
    m = len (L2)
    if n != m :
        return []
    if not is_perm (L1) :
        return []
    if not is_perm (L2) :
        return []
    for i in range (n) :
        L.append (L1 [L2 [i] - _sage_const_1 ])
    return L

def blocs_perm (L) :
    if not is_perm (L) :
        return set ([])
    S = set ([])
    for i, e in enumerate (L) :
        s = set ([e])
        tmp = L [e - _sage_const_1 ]
        while (tmp != e) :
            s.add (tmp)
            tmp = L [tmp - _sage_const_1 ]
        S.add (s)
    return S

    

