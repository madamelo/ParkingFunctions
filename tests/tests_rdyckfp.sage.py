

# This file was *autogenerated* from the file ../tests/tests_rdyckfp.sage
from sage.all_cmdline import *   # import sage library

_sage_const_5 = Integer(5); _sage_const_8 = Integer(8); _sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_4 = Integer(4); _sage_const_7 = Integer(7); _sage_const_6 = Integer(6); _sage_const_3 = Integer(3); _sage_const_0 = Integer(0)
sage.repl.load.load(sage.repl.load.base64.b64decode("Li4vY29kZS9yZHlja2ZwLnNhZ2U="),globals(),False)

a1 = _sage_const_5 
b1 = _sage_const_8 
L1 = [_sage_const_1 , _sage_const_2 , _sage_const_4 , _sage_const_4 , _sage_const_7 ]
L2 = [_sage_const_1 , _sage_const_2 , _sage_const_4 , _sage_const_6 , _sage_const_7 ]
L3 = [_sage_const_4 , _sage_const_7 , _sage_const_1 , _sage_const_4 , _sage_const_2 ]
L4 = [_sage_const_4 , _sage_const_7 , _sage_const_1 , _sage_const_6 , _sage_const_2 ]
print (is_prim_rfp (L1, a1, b1))
print (is_prim_rfp (L2, a1, b1))
print (is_rfp (L3, a1, b1))
print (is_rfp (L4, a1, b1))
print ()

a = _sage_const_3 
b = _sage_const_5 
g = generate_rfp (a, b)
k = _sage_const_0 
for e in g :
    print (e)
    k = k + _sage_const_1 
print ()
print (k)
print (b** (a - _sage_const_1 ))
print ()

g = generate_prim_rfp (a, b)
k = _sage_const_0 
for e in g :
    print (e)
    k = k + _sage_const_1 
print ()
print (k)
tmp = factorial (a + b - _sage_const_1 ) / factorial (a)
tmp = tmp / factorial (b)
print (tmp)
print ()

D5 = prfp_to_rdyck (L1, a1, b1)
D5.pretty_print ()

L5 = rdyck_to_prfp (D5)
print (L1)
print (L5)
print ()

D6, l6 = rfp_to_drdyck (L3, a1, b1)
print (l6)
D6.pretty_print ()

L6 = drdyck_to_rfp (D6, l6)
print (L3)
print (L6)

